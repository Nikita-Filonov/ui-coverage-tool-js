{"version":3,"sources":["../src/tools/selector.ts","../src/tracker/core.ts"],"sourcesContent":["export enum SelectorType {\n    CSS = 'CSS',\n    XPath = 'XPATH'\n}\n","import { UICoverageTrackerStorage } from './storage';\nimport { ActionType } from '../tools/actions';\nimport { SelectorType } from '../tools/selector';\nimport { Settings } from '../config/models';\nimport { getSettings } from '../config/core';\n\ntype UICoverageTrackerProps = {\n  app: string\n  settings?: Settings\n}\n\ntype TrackCoverageProps = {\n  selector: string,\n  actionType: ActionType,\n  selectorType: SelectorType\n}\n\nexport class UICoverageTracker {\n  private app: string;\n  private storage: UICoverageTrackerStorage;\n  private settings: Settings;\n\n  constructor({ app, settings }: UICoverageTrackerProps) {\n    this.app = app;\n    this.settings = settings || getSettings();\n    this.storage = new UICoverageTrackerStorage({ settings: this.settings });\n  }\n\n  async trackCoverage({ selector, actionType, selectorType }: TrackCoverageProps): Promise<void> {\n    await this.storage.save({ app: this.app, selector, actionType, selectorType });\n  }\n}\n"],"mappings":";;;;;;;;AAAO,IAAK,eAAL,kBAAKA,kBAAL;AACH,EAAAA,cAAA,SAAM;AACN,EAAAA,cAAA,WAAQ;AAFA,SAAAA;AAAA,GAAA;;;ACiBL,IAAM,oBAAN,MAAwB;AAAA,EAK7B,YAAY,EAAE,KAAK,SAAS,GAA2B;AACrD,SAAK,MAAM;AACX,SAAK,WAAW,YAAY,YAAY;AACxC,SAAK,UAAU,IAAI,yBAAyB,EAAE,UAAU,KAAK,SAAS,CAAC;AAAA,EACzE;AAAA,EAEA,MAAM,cAAc,EAAE,UAAU,YAAY,aAAa,GAAsC;AAC7F,UAAM,KAAK,QAAQ,KAAK,EAAE,KAAK,KAAK,KAAK,UAAU,YAAY,aAAa,CAAC;AAAA,EAC/E;AACF;","names":["SelectorType"]}